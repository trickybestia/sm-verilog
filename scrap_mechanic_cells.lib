library(scrap_mechanic_cells) {
  cell(AND2) {
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "A*B"; }
  }
  cell(AND3) {
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "A*B*C"; }
  }
  cell(AND4) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "A*B*C*D"; }
  }

  cell(OR1) {    
    pin(A) { direction: input; }
    pin(Y) { direction: output;
             function: "A"; }
  }
  cell(OR2) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "A+B"; }
  }
  cell(OR3) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "A+B+C"; }
  }
  cell(OR4) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "A+B+C+D"; }
  }

  cell(XOR2) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "A^B"; }
  }
  cell(XOR3) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "A^B^C"; }
  }
  cell(XOR4) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "A^B^C^D"; }
  }

  cell(NAND2) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A*B)"; }
  }
  cell(NAND3) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A*B*C)"; }
  }
  cell(NAND4) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A*B*C*D)"; }
  }

  cell(NOR1) {    
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "!A"; }
  }
  cell(NOR2) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A+B)"; }
  }
  cell(NOR3) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A+B+C)"; }
  }
  cell(NOR4) {    
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "!(A+B+C+D)"; }
  }
}
